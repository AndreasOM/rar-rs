name: Push to itchi.io

on:
  workflow_dispatch:
    inputs:
      use_latest_app:
        description: 'Use the app that was flagged as latest'
        required: false
        default: 'false'
        type: boolean
      project:
        description: 'Prefix for the project'
        required: true
        default: 'rar-rs'
        type: string
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: choice
        options:
          - latest
          - auto
          - ref
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string

  workflow_call:
    inputs:
      use_latest_app:
        description: 'Use the app that was flagged as latest'
        required: false
        default: 'false'
        type: boolean
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: string
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string
    secrets:
      ITCHIO_API_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

env:
  BUTLER_API_KEY: ${{ secrets.ITCHIO_API_KEY }}

jobs:
  push:
    name: Push
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - os: macos-11
            platform: apple-darwin
            package_type: .app
            target: FAT-apple-darwin
            app_package: "rar-rs.app"
            channel: "omni-mad/rar:test"
            version_file: "rar-rs.app/Contents/Resources/version.txt"

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1

      - name: Set up butler
        uses: jdno/setup-butler@v1
        with:
          version: 15.20.0

      - name: Login to butler
        run: |
          butler login 

      - name: Generate VERSION
        run: |
          #VERSION=${{ github.event.inputs.ref }}
          VERSION=$(git show -s --format=%H  HEAD)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          DATE=$(git show -s --format=%ci HEAD|cut -b1-10)
          echo "DATE=${DATE}" >> $GITHUB_ENV
          echo "VERSION: ${VERSION}"
          echo "DATE:    ${DATE}"

      - name: Prepare Variables
        shell: bash
        run: |
          echo ${PATH}
          export GITHUB_JSON='${{ toJSON(github) }}'
          export ENV_JSON='${{ toJSON(env) }}'
          export RUNNER_JSON='${{ toJSON(runner) }}'
          workflow/helpers/env.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"
              
      - name: Copy package archive from S3
        run: |
          aws s3 cp s3://${{ env.S3_ARCHIVE_BUCKET }}/${{ env.S3_APP_ARCHIVE_FOLDER }}/${{ env.MACOS_APP_ARCHIVE }} ${{ env.MACOS_APP_ARCHIVE_PATH }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"        

      - name: Unpack archives
        run: |
          cd ${{ env.PACKAGE_FOLDER }}
          tar xzf \
            ${{ env.MACOS_APP_ARCHIVE_PATH }}

      - name: Display packages
        run: |
          pwd
          ls -R
        working-directory: ${{ env.PACKAGE_FOLDER }}


      - name: Push to itch.io
        run: |
          butler push ${{ matrix.app_package }} ${{ matrix.channel }} --userversion-file=${{ matrix.version_file }}
        working-directory: ${{ env.PACKAGE_FOLDER }}
