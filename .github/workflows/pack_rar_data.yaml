name: Pack RAR Data

on:
  # :TODO: add push
  workflow_dispatch:
    inputs:
      project:
        description: 'Prefix for the project'
        required: true
        default: 'rar-rs'
        type: string
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: choice
        options:
          - latest
          - auto
          - ref
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string
  workflow_call:
    inputs:
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: string
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
        
jobs:
  build:
    runs-on: ubuntu-latest
#    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1
#          lfs: ''
#          submodules: ''

      # :TODO: setup platform specific dependencies

      - name: Generate VERSION
        run: |
          #VERSION=${{ github.event.inputs.ref }}
          VERSION=$(git show -s --format=%H  HEAD)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          # DATE=$(git show -s --format=%ci ${{ github.sha }}|cut -b1-10)
          DATE=$(git show -s --format=%ci HEAD|cut -b1-10)
          echo "DATE=${DATE}" >> $GITHUB_ENV
          echo "VERSION: ${VERSION}"
          echo "DATE:    ${DATE}"

      - name: Prepare Variables
        shell: bash
        run: |
          export GITHUB_JSON='${{ toJSON(github) }}'
          export ENV_JSON='${{ toJSON(env) }}'
          export RUNNER_JSON='${{ toJSON(runner) }}'
          workflow/helpers/env.sh
          # mkdir -p ${{ env.PARTS_FOLDER }}


      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache crates
        uses: actions/cache@v2
        env:
          cache-name: cache-crates
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('${{ env.PROJECT }}/Cargo.lock') }}

          # :TODO: technically the above key is wrong

#      - name: Install omt
#        uses: actions-rs/cargo@v1
#        with:
#          command: install
#          args: --force omt

      - name: Install prebuilt omt
        run: |
          omt_tag=$(gh release -R andreasom/omt list|grep Latest|cut -f1)
          echo "| omt_tag      | ${omt_tag}     |" >> $GITHUB_STEP_SUMMARY
          cd ${{ env.TEMP }}
          gh release -R andreasom/omt download ${omt_tag} --pattern omt-linux-${omt_tag}.tgz
          tar xzf omt-linux-${omt_tag}.tgz
          cp omt-linux/omt-* ${HOME}/.cargo/bin/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pack data
        run: |
          ## variant b of finding the data(s)
          ## for d in $(find ${{ env.DATA_FOLDER }} -type d)
          ##
          ## variant a of finding the data(s)
          for d in ${{ env.DATA_ARCHIVES }}
          do
            # [basepath] [output.omar] [paklist] {music_ogg|music_mp3|music_mp3_ogg}
            basepath=${{ env.DATA_FOLDER }}/${d}
            omar="${{ env.OMAR_FOLDER }}/${d}.omar"
            paklist="paklist.txt"
            music="music_mp3"
            ./workflow/helpers/pack_data.sh ${basepath} ${omar} ${paklist} ${music}
            echo "Packed ${basepath} to ${omar}" >> $GITHUB_STEP_SUMMARY
          done

      - name: Add build number
        run: |
          echo "Adding build number"
          cp build_number.txt ${{ env.OMAR_FOLDER }}/

#      - name: Add omars
#        run: |
#          echo "Adding omars"
#          cp ${{ env.OMAR_FOLDER }}/*.omar ${{ env.PARTS_FOLDER }}/

      - name: List result
        run: |
          echo "sha:        ${{ github.sha }}"
          echo "ref_name:   ${{ github.ref_name }}"
          echo "ref:        ${{ github.ref }}"
          echo "ref_type:   ${{ github.ref_type }}"
          echo "event_name: ${{ github.event_name }}"
          echo "actor:      ${{ github.actor }}"
          ls -l ${{ env.PARTS_FOLDER }}/
          
      - name: Create archive
        run: |
          cd ${{ env.PARTS_FOLDER }}
          archive="${{ env.ARCHIVE_FOLDER }}/${{ env.OMAR_ARCHIVE_PREFIX }}omar${{ env.OMAR_ARCHIVE_SUFFIX }}"
          tar czf ${archive} omar/
          echo "Archived omar/ in ${{ env.PARTS_FOLDER }} to ${archive}" >> $GITHUB_STEP_SUMMARY
          
      - name: Copy archive to S3
        run: |
          cd ${{ env.PARTS_FOLDER }}
          archive="${{ env.ARCHIVE_FOLDER }}/${{ env.OMAR_ARCHIVE_PREFIX }}omar${{ env.OMAR_ARCHIVE_SUFFIX }}"
          dest="s3://${{ env.S3_ARCHIVE_BUCKET }}/${{ env.S3_ARCHIVE_FOLDER }}/"
          aws s3 cp \
            ${archive} \
            ${dest}
          echo "Uploaded ${archive} to ${dest}" >> $GITHUB_STEP_SUMMARY
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"        

      - name: Update LATEST info
        run: |
          echo ${{ env.DATE }} > ${{ env.LATEST_FOLDER }}/latest_data_date.txt
          echo ${{ env.VERSION }} > ${{ env.LATEST_FOLDER }}/latest_data_version.txt
          dest="s3://${{ env.S3_ARCHIVE_BUCKET }}/${{ env.S3_ARCHIVE_FOLDER }}/latest/"
          aws s3 sync ${{ env.TEMP_FOLDER }}/latest_data_date.txt ${dest}
          aws s3 cp ${{ env.TEMP_FOLDER }}/latest_data_version.txt ${dest}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"        

      - name: Create Summary
        run: |
          echo "| PROJECT           | ${{ env.PROJECT }}               |" >> $GITHUB_STEP_SUMMARY
          echo "| VERSION           | ${{ env.VERSION }}               |" >> $GITHUB_STEP_SUMMARY
          echo "| :---------------- | -------------------------------: |" >> $GITHUB_STEP_SUMMARY
          echo "| S3_ARCHIVE_BUCKET | ${{ env.S3_ARCHIVE_BUCKET }}     |" >> $GITHUB_STEP_SUMMARY
          echo "| S3_ARCHIVE_FOLDER | ${{ env.S3_ARCHIVE_FOLDER }}     |" >> $GITHUB_STEP_SUMMARY
          echo "| ----------------- | -------------------------------- |" >> $GITHUB_STEP_SUMMARY
          echo "| PARTS_FOLDER      | ${{ env.PARTS_FOLDER }}          |" >> $GITHUB_STEP_SUMMARY
          echo "| DATA_ARCHIVE      | ${{ env.DATA_ARCHIVE }}          |" >> $GITHUB_STEP_SUMMARY

